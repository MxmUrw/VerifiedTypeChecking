
module Verification.Experimental.Algebra.Ring.Localization.Instance.Group where

open import Verification.Conventions
open import Verification.Experimental.Meta.Structure
open import Verification.Experimental.Algebra.Setoid.Definition
open import Verification.Experimental.Algebra.Monoid.Definition
open import Verification.Experimental.Algebra.Group.Definition
-- open import Verification.Experimental.Algebra.Group.Quotient
open import Verification.Experimental.Algebra.Abelian.Definition
open import Verification.Experimental.Algebra.Ring.Definition
open import Verification.Experimental.Algebra.Ring.Localization.Definition
open import Verification.Experimental.Algebra.Ring.Localization.Instance.Setoid
open import Verification.Experimental.Algebra.Ring.Localization.Instance.Monoid


module _ {R : CRing ùëñ} {M : MCS R} where

  instance
    isGroup:Localize : isGroup ‚Ä≤ Localize R M ‚Ä≤
    isGroup.‚ó° isGroup:Localize = ?
    isGroup.inv-l-‚ãÜ isGroup:Localize = ?
    isGroup.inv-r-‚ãÜ isGroup:Localize = ?
    isGroup.cong-‚ó° isGroup:Localize = ?



